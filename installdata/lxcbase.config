# LXC Container Configuration

# The absolute path of rootfs
lxc.rootfs.path = <rootfs_absolute_path>

# Basic configuration
lxc.signal.halt = SIGUSR1
lxc.signal.reboot = SIGTERM
lxc.uts.name = <container_name>
lxc.tty.max = 1
lxc.pty.max = 1
lxc.cap.drop = sys_module mac_admin mac_override sys_time

# We need to run unconfined for our purposes,
# otherwise apparmor will prevent our stuff
lxc.apparmor.profile = unconfined

# Mount points and access policies
lxc.mount.auto = cgroup:mixed proc:mixed sys:rw
lxc.mount.entry = shm /dev/shm tmpfs defaults 0 0
lxc.mount.entry = /sys/kernel/security sys/kernel/security none ro,bind,optional 0 0

# Additional mount points used by our applications
lxc.mount.entry = /tmp/VIO       var/run/VIO none bind,create=dir 0 0
lxc.mount.entry = /dev/hugepages var/run/hugepages none optional,bind,create=dir 0 0

# CPU List, substitute with actual list of available CPUs for each container
# Try to avoid hyperthreads
lxc.cgroup.cpuset.cpus = <cpu_set>

# SR-IOV + DPDK Configuration
lxc.cgroup.devices.allow = c 238:* rwm

############################ Network Configuration #############################

# Basic linux network configuration, ports like this are all connected to
# the same linux bridge
lxc.net.0.type = veth
lxc.net.0.link = lxcbr0

# SR-IOV without DPDK (so using basic kernel modules) configuration
# FIXME: NOT WORKING - DISABLED - IF ENABLED, DISABLE VETH CONFIG ABOVE
#lxc.net.0.type = phys
#lxc.net.0.link = <name_sriov_vf>

# Set interface 0 as high
lxc.net.0.flags = up

# MAC and IP of the virtual ethernet
lxc.net.0.hwaddr = <mac_address>
lxc.net.0.ipv4.address = <ip_address>/<netmask>

# To use SR-IOV with DPDK, enable the following line
# NOTICE: LEAVE COMMENTED OUT IF THE DEVICE DOES NOT EXIST
#         [NO PORT ASSOCIATED WITH DPDK DRIVER]
#         OR THE CONTAINER WILL FAIL TO START
#lxc.mount.entry = /dev/<sriov_dev_name> dev/<sriov_dev_name> none bind,create=file
